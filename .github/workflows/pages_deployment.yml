name: GitHub Pages 網站部署

on:
  push:
    branches:
      - main # 當 main 分支有新的提交時觸發
  
  workflow_dispatch: # 允許手動觸發部署

# 設置 Pages 的權限
permissions:
  contents: read # 允許讀取倉庫內容
  pages: write   # 允許寫入 Pages 部署
  id-token: write # 允許 OpenID Connect (OIDC) 認證

jobs:
  # 定義一個名為 'deploy' 的任務
  deploy:
    environment:
      name: github-pages # 指定部署環境為 GitHub Pages
      url: ${{ steps.deployment.outputs.page_url }} # 設定部署後 URL

    runs-on: ubuntu-latest # 在最新的 Ubuntu 環境中運行

    steps:
      - name: 簽出程式碼 (Checkout repository)
        # 獲取你的倉庫內容
        uses: actions/checkout@v4

      - name: 設定 Jekyll (Set up Jekyll)
        # 使用 GitHub Pages 的官方 Jekyll Action
        # 這會安裝 Ruby, Bundler, Jekyll 以及所有相關依賴
        uses: actions/jekyll-build-pages@v1 # 使用正確的官方 action
        with:
          source: ./ # 你的 Jekyll 網站源碼所在的根目錄，如果不是，請修改
          destination: ./_site # Jekyll 網站的輸出目錄

      - name: 設定 Node.js 環境 (Optional: If your Jekyll project uses Node.js tooling)
        # 如果你的 Jekyll 網站建置過程還需要 Node.js 工具 (例如 npm scripts, Sass 編譯等)，則保留此步驟。
        # 否則可以移除。
        uses: actions/setup-node@v4
        with:
          node-version: '20' # 選擇合適的 Node.js 版本

      - name: 建置 Jekyll 網站 (Build Jekyll website)
        # 這裡的命令會因你的 Jekyll 項目結構而異
        # 如果 actions/jekyll-build-pages@v1 已經執行了 bundle exec jekyll build，這步可能不需要
        # 如果你僅使用 actions/jekyll-build-pages@v1 並且所有配置都在 _config.yml 和 Gemfile 中
        # 這一步可能可以移除，或者用於運行額外的 Jekyll 插件或前端建置腳本
        run: |
          bundle install # 確保所有 Gemfile 依賴都安裝
          bundle exec jekyll build # 實際建置 Jekyll 網站到 _site
        # 注意：如果 actions/jekyll-build-pages@v1 已經足夠，這步可能會是多餘的

      - name: 上傳 Pages Artifact (Upload Pages Artifact)
        # 使用 actions/upload-pages-artifact Action 上傳建置好的網站文件
        # path: 是 Jekyll 網站的輸出目錄
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site # Jekyll 網站的建置輸出目錄

      - name: 部署到 GitHub Pages (Deploy to GitHub Pages)
        # 使用 actions/deploy-pages Action 部署網站
        # 這個步驟會自動使用上面上傳的 artifact
        id: deployment # 給這個步驟一個 ID，以便後續引用其輸出
        uses: actions/deploy-pages@v4